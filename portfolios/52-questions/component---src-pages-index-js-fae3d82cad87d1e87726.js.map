{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Card.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["StaticQueryContext","React","createContext","StaticQuery","props","react_default","a","createElement","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","COLORS","Card","state","currentIndex","colorIndex","goToPrev","_this","setState","getRandomColor","goToNext","randomIndex","Math","floor","random","length","_this2","this","iconStyle","backgroundColor","contentStyle","gatsby_browser_entry_StaticQuery","currentQuestion","allQuestionsJson","edges","node","SelectedIcon","FeatherIcons","icon","LeftChevron","RightChevron","className","style","question","onClick","_1990252384","Component","__webpack_exports__","src_components_Card","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"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","file":"component---src-pages-index-js-fae3d82cad87d1e87726.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport * as FeatherIcons from 'react-icons/fi';\n\nimport './Card.css';\n\n// flat colors\nconst COLORS = [\n\t'#74b9ff',\n\t'#f6e58d',\n\t'#c7ecee',\n\t'#0984e3',\n\t'#ffbe76',\n\t'#7ed6df',\n\t'#ff7675',\n\t'#ff7979',\n\t'#00d8d6',\n\t'#ffd32a',\n\t'#ef5777',\n\t'#ffdd59',\n\t'#fd79a8',\n\t'#fdcb6e',\n\t'#a29bfe',\n\t'#55efc4',\n\t'#00b894',\n];\n\nclass Card extends React.Component {\n\tstate = {\n\t\tcurrentIndex: 0,\n\t\tcolorIndex: 0,\n\t};\n\n\tgoToPrev = () => {\n\t\tconst currentIndex =\n\t\t\tthis.state.currentIndex === 0 ? 0 : this.state.currentIndex - 1;\n\n\t\tthis.setState({\n\t\t\tcurrentIndex,\n\t\t\tcolorIndex: this.getRandomColor(),\n\t\t});\n\t};\n\n\tgoToNext = () => {\n\t\tconst currentIndex =\n\t\t\tthis.state.currentIndex === 51 ? 0 : this.state.currentIndex + 1;\n\n\t\tthis.setState({\n\t\t\tcurrentIndex,\n\t\t\tcolorIndex: this.getRandomColor(),\n\t\t});\n\t};\n\n\tgetRandomColor = () => {\n\t\tlet randomIndex = Math.floor(Math.random() * (COLORS.length - 1));\n\n\t\tif (randomIndex === this.state.colorIndex) {\n\t\t\trandomIndex = Math.floor(randomIndex / 2);\n\t\t}\n\n\t\tif (randomIndex >= COLORS.length - 2) {\n\t\t\trandomIndex--;\n\t\t} else {\n\t\t\trandomIndex++;\n\t\t}\n\n\t\treturn randomIndex;\n\t};\n\n\trender() {\n\t\tconst { colorIndex } = this.state;\n\t\tconst iconStyle = {\n\t\t\tbackgroundColor: COLORS[colorIndex],\n\t\t};\n\n\t\tconst contentStyle = {\n\t\t\tbackgroundColor: COLORS[colorIndex + 1],\n\t\t};\n\n\t\treturn (\n\t\t\t<StaticQuery\n\t\t\t\tquery={graphql`\n\t\t\t\t\tquery QuestionsQuery {\n\t\t\t\t\t\tallQuestionsJson {\n\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\ticon\n\t\t\t\t\t\t\t\t\tquestion\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t`}\n\t\t\t\trender={(data) => {\n\t\t\t\t\tconst currentQuestion =\n\t\t\t\t\t\tdata.allQuestionsJson.edges[this.state.currentIndex].node;\n\n\t\t\t\t\tif (!currentQuestion) {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tcurrentIndex: 0,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tconst SelectedIcon = FeatherIcons[currentQuestion.icon];\n\t\t\t\t\tconst LeftChevron = FeatherIcons['FiChevronLeft'];\n\t\t\t\t\tconst RightChevron = FeatherIcons['FiChevronRight'];\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className=\"card\">\n\t\t\t\t\t\t\t<div className=\"card__content\" style={contentStyle}>\n\t\t\t\t\t\t\t\t{currentQuestion.question}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button className=\"card__btn--left\" onClick={this.goToPrev}>\n\t\t\t\t\t\t\t\t<LeftChevron />\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button className=\"card__btn--right\" onClick={this.goToNext}>\n\t\t\t\t\t\t\t\t<RightChevron />\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<div className=\"card__icon\" style={iconStyle}>\n\t\t\t\t\t\t\t\t<SelectedIcon />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from '../components/Card';\n\nexport default () => {\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<h1 className=\"header\">52 Questions</h1>\n\t\t\t<Card />\n\t\t</div>\n\t);\n};\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}